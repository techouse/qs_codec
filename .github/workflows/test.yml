name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:
defaults:
  run:
    shell: bash
permissions: read-all

jobs:
  analyze:
    name: "Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: pip install -r requirements_dev.txt
      - name: Run static analysis
        run: tox -e linters
  test:
    needs: analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - toxenv: "python3.8"
            py: "3.8"

          - toxenv: "python3.9"
            py: "3.9"

          - toxenv: "python3.10"
            py: "3.10"

          - toxenv: "python3.11"
            py: "3.11"

          - toxenv: "python3.12"
            py: "3.12"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: "pip"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-1
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install -U codecov tox-gh-actions
          pip install -r requirements_dev.txt
      - name: Test with tox
        run: tox
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: techouse/qs_codec
          files: ./coverage.xml
          env_vars: OS,PYTHON
          verbose: true
  ensure_compatibility:
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          pip install -e .
          pip install -r requirements_dev.txt
      - name: Run a comparison test between qs_codec and qs for JavaScript
        working-directory: tests/comparison
        continue-on-error: true
        run: |
          set -e
          npm install
          node_output=$(node qs.js)
          python_output=$(python3 qs.py)
          if [ "$node_output" == "$python_output" ]; then
              echo "The outputs are identical."
          else
              echo "The outputs are different."
              exit 1
          fi